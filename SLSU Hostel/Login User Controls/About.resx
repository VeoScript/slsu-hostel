<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAABIpJREFUeF7t3aFvXWUAxuEKBAKBQCAQCFRDctN7bxsESQ0CwR+AQEwg9icgEEsQ
        CAQCiZiYRCIRiIkJBAKJQExMTiAQE/Ce5Guy3BygcM+Sc/c+T/Kladaeo35vT5v27gwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYGGbzeb1i4uLT3a7
        3YPtdvswb38b51He/y7n08vLyzfHhwMvgyn8RP51Av8jb//8p5OPeZa396+urt4anw6cqv1+/0GCfvp8
        5Lc501hMTwvjMsCpSch3x1f02chvc/L5X4zLAaci4X50bPzPnbvjssDa5dH9nUT7+0HE//tMQ5Lz3rg8
        sGaJ9sFhxMeeDMCP4/LAWu33+3fnAl7iTN9WjNsAa5RQPz8Md6mTAfh23AZYo4T66DDcpU4G4Mm4DbBG
        CXWxH/79zXlj3ApYk/Pz89dmgl30TD9jGLcD1mT69d25aBc+74/bAWszE+yiZ7PZvD1uBaxNIp3+um82
        3mPPdrt9dn19/cq4FbA2CXXxXwK6ORmAh+M2wBrt9/uP5+Jd6Hw2bgOsUR7RX81X6scz8R57nnqxEDgB
        GYA7MwEfe+6NywNrNv2gLsF+fxDwMeen6cliXB5Yu+mXgvIk8MtMzP/p5BpPPPrDCZpeCzAB/zAX9m1O
        Pvdnrw0IJ2x8O3AvMf/rC4LenHzs9AIg30xPEeMywCmbHuMT9ZcJ/NfD4G9O/v3xFP70ikLj04CXzRT4
        9GrBif3OdPL+h/7IBwAAAAAAAAAAAAAAAAAAAAAAlrTb7b7Kuf+izrgNsEaJ9IX956DTGbcB1iiRGgBo
        lUgNALRKpAYAWiVSAwCtEqkBgFaJ1ABAq0RqAKBVIjUA0CqRGgBolUgNALRKpAYAWiVSAwCtEqkBgFaJ
        1ABAq0RqAKBVIjUA0CqRGgBolUgNALRKpAYAWiVSAwCtEqkBgFaJ1ABAq0RqAKBVIjUA0CqRGgBolUgN
        ALRKpAYAWiVSAwCtEqkBgFaJ1ABAq0RqAKBVIjUA0CqRGgBolUgNALRKpAYAWiVSAwCtEqkBgFaJ1ABA
        q0RqAKBVIjUA0CqRGgBolUgNALRKpAYAWiVSAwCtEqkBgFaJ1ABAq0RqAKBVIjUA0CqRGgBolUgNALRK
        pAYAWiVSAwCtEqkBgFaJ1ABAq0RqAKBVIjUA0CqRGgBolUgNALRKpAYAWiVSAwCtEqkBgFaJ1ABAq0Rq
        AKBVIjUA0CqRGgBolUgNALRKpAYAWiVSAwCtEqkBgFaJ1ABAq0RqAKBVIjUA0CqRGgBolUgNALRKpAYA
        WiVSAwCtEqkBgFaJ1ABAq0RqAKBVIjUA0CqRGgBolUgNALRKpAYAWiVSAwCtEqkBgFaJ1ABAq0RqAKBV
        IjUA0CqRGgBolUgNALRKpAYAWiVSAwCtEqkBgFaJ1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOtydvYXrdBC3m+Y3WIAAAAASUVORK5CYII=
</value>
  </data>
</root>